<template>
<div class="page" data-name="settings">
  <div class="navbar">
    <div class="navbar-bg"></div>
    <div class="navbar-inner sliding">
      <div class="title">Settings</div>
    </div>
  </div>
  <div class="page-content">
    ${Object.keys(expenses).map((category) => {
    return $h`
    <div class="card">
  <div class="card-header">${category}</div>
  <div class="card-content flex-direction-column justify-content-center">
    <!-- Add gauge-init class, and specify parameters in data- attributes -->
    <div
      class="gauge gauge-init my-gauge center"
      data-type="circle"
      data-value=${expenses[category].reduce((sum,expense) => {
      return sum - expense.sum
      },0)/budget[category]}
      data-value-text="${Math.ceil(expenses[category].reduce((sum,expense) => {
      return sum + Math.abs(expense.sum)
      },0))}kr"
      data-value-text-color="${expenses[category].reduce((sum,expense) => {
      return sum - expense.sum
      },0) / budget[category] < 0.5 ? "#4caf50" : "#ff9800"}"
      data-border-color="${expenses[category].reduce((sum,expense) => {
      return sum - expense.sum
      },0) / budget[category] < 0.5 ? "#4caf50" : "#ff9800"}"
      data-label-text="av ${budget[category]}kr"
    ></div>
  </div>
  <div class="card-footer">Spenderat - ${expenses[category].reduce((sum,expense) => {
      return sum - expense.sum
      },0)}kr    Budgeterat - ${budget[category] ?? 0}kr</div>
</div>`
    })}
  </div>
  <div class="fab fab-right-bottom panel-open" data-panel="right">
    <a href="#">
      <i class="icon material-icons if-md">settings</i>
    </a>
  </div>
<!-- Right panel with reveal effect-->
<div class="panel panel-right panel-reveal">
  <div class="view">
    <div class="page">
      <div class="navbar">
        <div class="navbar-bg"></div>
        <div class="navbar-inner">
          <div class="title">Right Panel</div>
        </div>
      </div>
      <div class="page-content">
        <div class="block">
        <form class="list list-strong-ios list-dividers-ios list-outline-ios" id="my-form">
          <ul>
          ${Object.keys(budget).map((category) => {
          return $h`
           <li>
             <div class="item-content item-input">
               <div class="item-inner">
                 <div class="item-title item-label">${category}</div>
                 <div class="item-input-wrap">
                   <input type="number" name="${category}" value="${budget[category]}" placeholder="${budget[category]}kr" />
                 </div>
               </div>
             </div>
           </li>
           `
          })}
          </ul>
        </form>
        <div class="block block-strong grid grid-cols-1 grid-gap">
          <a id="savebudget" class="button button-fill convert-form-to-data" href="#">Spara</a>
        </div>
        </div>
      </div>
    </div>
  </div>
</div>
</div>
</template>
<script>
  export default (props, {$,$on,$f7,$store}) => {

    const expenses = props.expenses;
    const budget = props.budget;


    $on("pageInit",() => {
    document.querySelector("#savebudget").addEventListener("click",(e) => {
    e.preventDefault();
    var formData = $f7.form.convertToData('#my-form');
    fetch("/api/post/budget",
{
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
    method: "POST",
    body: JSON.stringify(formData)
})
.then(function(res){ console.log(res) })
.catch(function(res){ console.log(res) })
    });
    })
    

    return $render;
  }
</script>
