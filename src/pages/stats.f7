<template>
  <div class="page" data-name="stats">
	<div class="navbar">
	  <div class="navbar-bg"></div>
	  <div class="navbar-inner sliding">
		<div class="title">Statistik</div>
	  </div>
	</div>
	<div class="page-content">

	<div class="card">
      <div class="card-header">Lön per löneperiod</div>
	      <div class="card-content card-content-padding">
		  	<canvas style="height: 300px;" id="salaryChart"></canvas>
		  </div>
    </div>
	
	</div>
  </div>
</template>
<script>
  export default async (props,{$f7,$store,$,$on}) => {
	var expenses = $store.getters.getFullYearExpenses;
		
	$on("pageInit", async () => {
	let attempts = 0;
	let maxAttempts = 15;
	$f7.preloader.show();
	while (expenses.length == 0 || attempts <= maxAttempts) {
		console.log("Waiting for expenses.. Attempt: " + attempts)
		await sleep(500);
		++attempts;
	}
	$f7.preloader.hide();
		 var graphData = calculateSalaryPerSalaryPeriod(expenses.value);
		 generateChart("salaryChart", `line`, graphData[0], ["Lön"], [graphData[1]]);
		  
	})

	const generateChart = (canvasId, type, labels, dataLabels, data) => {
		console.log("Labels");
		console.log(labels);
		console.log("Data:")
		console.log(data)
		console.log("Datalabels");
		console.log(dataLabels)
		let ctx = document.getElementById(canvasId);

		if (dataLabels.length != data.length) {
			throw new Error("Labels and data must have the same length");
		}
		let dataSets = [];
		for (let i = 0; i < data.length; i++) {
			dataSets.push({
				label: dataLabels[i],
				data: data[i],
				borderColor: "#26263a",
				borderWidth: 1,
				fill: false
			})
		}

		new Chart(ctx, {
			type: type,
			data: {
				labels: labels,
				datasets: dataSets
			},
			options: {
				aspectRatio: 1,
				scales: {
					y: {
						beginAtZero: true,
					},
				},
			},
		});
	}

	const sleep = async (millis) => {
		return new Promise(resolve => setTimeout(resolve, millis));
	}

	const  calculateSalaryPerSalaryPeriod = (expenses) =>  {
		const result = [0,0,0,0,0,0,0,0,0,0,0,0];
		const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

		for (var expense of expenses) {
			if (expense.category != "Lön") {
				continue;
			}
			result[expense.salaryPeriod] += Number(expense.sum);
		};
		months.unshift(months.pop());
		result.unshift(result.pop());

		return [months,result];

	};

	return $render;
  }
</script>
